

/** PSEUDO CODE
Based on the info given in the project we made. 
/ start program
/ prompt to get user info 
/ to be able to save user information
/ if user information is in database then prompts for shipping appear same goes for new saved users
/ shopping options are shown and asks the user to select a product. 
/ have the products saved with prices in the code
/ when user selects the product and purchases the price is calculated and bill received
/ end program
**/






// these are importing tools used to help get user information to the database.
package AC;
import java.io.*;
import java.util.Scanner;
public class main {
static final String UserSave = "customer data.txt";
	
public static void main(String[] args) {
	
	 Scanner input = new Scanner(System.in);
	
	
// setting up all the variables that will be used in the programing
	
String firstn, lastn, mailadress, contact, billinginfo;




Product p1 = new Product("Hammermill Paper", 31.99 );
Product p2 = new Product("Domtar Paper", 55.99 );
Product p3 = new Product("True Red Paper", 69.69 );


// this prints out a prompt asking the user for their first name
System.out.println ("First Name?");
firstn = input.nextLine().trim();
// this is used find if the user is already in the database
if(returninguser(firstn) ) {
	
	// this prints out the welcome back message and what to do to continue shopping
	System.out.println (" Welcome back :D " + firstn + " Type enter to shop!");
	
	firstn = input.nextLine().trim();
	// this next part is used for if the user is new and asks for more information to save into the database
} else {
	System.out.println ("last Name:");
lastn = input.nextLine();
System.out.println ("Phone Number:");
contact = input.nextLine();
System.out.println ("Adress:");
mailadress = input.nextLine();
System.out.println ("Card info:");
billinginfo = input.nextLine();


// this saves the new user and the information onto the database (will make method at end)	
Client client1	= new Client(firstn, lastn, mailadress, contact, billinginfo);
SavedUser(client1);


// this is the programming for shopping the products we have.	
}
System.out.println ("Here are the products");
System.out.println("1." + p1.name +"$"+ p1.price );
System.out.println("2." + p2.name +"$"+ p2.price );
System.out.println("3." + p3.name +"$"+ p3.price );
System.out.println ("Eneter product number 1-3 and type done to finish");
String choice = input.nextLine();


// this programing uses the input from the user to select the products the user wants to buy
if(choice.equals("1")) {
   System.out.println ("how much paper would you like?");
   int qty = Integer.parseInt(input.nextLine());
   p1.purchase(qty);
  
} else if (choice.equals("2")) {
       System.out.println ("how much paper would you like?");
       int qty = Integer.parseInt(input.nextLine());
       p2.purchase(qty);
   } else if (choice.equals("3")) {
           System.out.println ("how much paper would you like?");
           int qty = Integer.parseInt(input.nextLine());
           p3.purchase(qty);
   }
          // this part is to continue onto the checkout phase
           else if (choice.equals("done")) {
   }


// this activates the calculations for the different products and the total price for the bill and prints your receipt
  System.out.println("Your Bill");
  p1.bill();
  p2.bill();
  p3.bill();
 
  double price = p1.totalprice()+p2.totalprice()+p3.totalprice();
  System.out.printf ("Total: $%.2f%n", price);
}


// this is the programing that reads the returnings users information to continue the program	
private static boolean returninguser(String firstn) {
	try (BufferedReader reader = new BufferedReader(new FileReader(UserSave))){
		String line;
		while ((line =reader.readLine()) !=null) {
			if(line.trim().equalsIgnoreCase(firstn)) {
				return true;
			}
			reader.readLine();
			reader.readLine();
		}
	} catch (IOException e) {
		
	}
return false;


// this here below is what writes down and saves the new users information given from the new user prompt	
}
public static void SavedUser(Client client1) {
	try (BufferedWriter writer = new BufferedWriter(new FileWriter(UserSave, true))) {
       writer.write(client1.firstn);
       writer.newLine();
       writer.write(client1.lastn);
       writer.newLine();
       writer.write(client1.mailadress +", "+ client1.contact +", "+ client1.billinginfo);
       writer.newLine();
   } catch (IOException e) {
       System.out.println("Error saving user.");
       e.printStackTrace();
   }
}
}

